openapi: 3.0.0
info:
  contact:
    email: support@kinde.com
    name: Kinde Support Team
    url: https://kinde.com/docs/
  description: Provides endpoints to manage your Kinde Businesses
  termsOfService: https://kinde.com/docs/important-information/terms-of-service/
  title: Kinde Management API
  version: "1"
servers:
- url: "https://{businessName}.kinde.com/"
  variables:
    businessName:
      default: app
      description: Business name created in the Kinde admin area.
security:
- kindeBearerAuth: []
tags:
- description: Everything about your end-users.
  name: Users
paths:
  /oauth2/user_profile:
    get:
      description: |
        Contains the id, names and email of the currently logged in user.
      operationId: getUser
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user_profile'
          description: Details of logged in user V1.
        "403":
          description: Invalid credentials.
      summary: Get User Profile
      tags:
      - OAuth
      x-accepts: application/json
      x-tags:
      - tag: OAuth
  /oauth2/v2/user_profile:
    get:
      description: |
        Contains the id, names, profile picture URL and email of the currently logged in user.
      operationId: getUserProfileV2
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user_profile_v2'
          description: Details of logged in user V2.
        "403":
          description: Invalid credentials.
      summary: Returns the details of the currently logged in user
      tags:
      - OAuth
      x-accepts: application/json
      x-tags:
      - tag: OAuth
  /api/v1/users:
    get:
      description: |
        The returned list can be sorted by full name or email address
        in ascending or descending order. The number of records to return at a time can also be controlled using the `page_size` query
        string parameter.
      operationId: getUsers
      parameters:
      - description: Field and order to sort the result by.
        explode: true
        in: query
        name: sort
        required: false
        schema:
          enum:
          - name_asc
          - name_desc
          - email_asc
          - email_desc
          nullable: true
          type: string
        style: form
      - description: Number of results per page. Defaults to 10 if parameter not sent.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          nullable: true
          type: integer
        style: form
      - description: ID of the user to filter by.
        explode: true
        in: query
        name: user_id
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: A string to get the next page of results if there are more results.
        explode: true
        in: query
        name: next_token
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: Filter the results by email address. The query string should
          be comma separated and url encoded.
        explode: true
        in: query
        name: email
        required: false
        schema:
          nullable: true
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/users_response'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/users_response'
          description: Users successfully retrieved.
        "403":
          description: Invalid credentials.
      summary: List Users
      tags:
      - Users
      x-accepts: application/json
      x-tags:
      - tag: Users
  /api/v1/user:
    delete:
      description: |
        Delete a user record.
      operationId: deleteUser
      parameters:
      - description: The user's id.
        explode: true
        in: query
        name: id
        required: true
        schema:
          nullable: false
          type: string
        style: form
      - description: "Delete all data and remove the user's profile from all of Kinde,\
          \ including the subscriber list"
        explode: true
        in: query
        name: is_delete_profile
        required: false
        schema:
          nullable: false
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success_response'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/success_response'
          description: User successfully deleted.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Bad request.
        "403":
          description: Invalid credentials.
      summary: Delete User
      tags:
      - Users
      x-accepts: application/json
      x-tags:
      - tag: Users
    get:
      description: |
        Retrieve a user record.
      operationId: getUserData
      parameters:
      - description: The user's id.
        explode: true
        in: query
        name: id
        required: true
        schema:
          nullable: false
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/user'
          description: User successfully updated.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Bad request.
        "403":
          description: Invalid credentials.
      summary: Get User
      tags:
      - Users
      x-accepts: application/json
      x-tags:
      - tag: Users
    patch:
      description: |
        Update a user record.
      operationId: updateUser
      parameters:
      - description: The user's id.
        explode: true
        in: query
        name: id
        required: false
        schema:
          nullable: false
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateUser_request'
        description: The user to update.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/user'
          description: User successfully updated.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Bad request.
        "403":
          description: Invalid credentials.
      summary: Update User
      tags:
      - Users
      x-content-type: application/json
      x-accepts: application/json
      x-tags:
      - tag: Users
    post:
      description: |
        Creates a user record and optionally zero or more identities for the user. An example identity could be the email
        address of the user.
      operationId: createUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createUser_request'
        description: The details of the user to create.
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/create_user_response'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/create_user_response'
          description: User successfully created.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Error creating user.
        "403":
          description: Invalid credentials.
      summary: Create User
      tags:
      - Users
      x-content-type: application/json
      x-accepts: application/json
      x-tags:
      - tag: Users
  /api/v1/subscribers:
    get:
      description: |
        The returned list can be sorted by full name or email address
        in ascending or descending order. The number of records to return at a time can also be controlled using the `page_size` query
        string parameter.
      operationId: GetSubscribers
      parameters:
      - description: Field and order to sort the result by.
        explode: true
        in: query
        name: sort
        required: false
        schema:
          enum:
          - name_asc
          - name_desc
          - email_asc
          - email_desc
          nullable: true
          type: string
        style: form
      - description: Number of results per page. Defaults to 10 if parameter not sent.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          nullable: true
          type: integer
        style: form
      - description: A string to get the next page of results if there are more results.
        explode: true
        in: query
        name: next_token
        required: false
        schema:
          nullable: true
          type: string
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/get_subscribers_response'
          description: Subscriber successfully retrieved.
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Bad request.
      summary: List Subscribers
      tags:
      - Subscribers
      x-accepts: application/json; charset=utf-8
      x-tags:
      - tag: Subscribers
    post:
      description: Create subscriber.
      operationId: CreateSubscriber
      parameters:
      - description: Subscriber's first name.
        explode: true
        in: query
        name: first_name
        required: true
        schema:
          nullable: false
          type: string
        style: form
      - description: Subscriber's last name.
        explode: true
        in: query
        name: last_name
        required: true
        schema:
          nullable: true
          type: string
        style: form
      - description: The email address of the subscriber.
        explode: true
        in: query
        name: email
        required: true
        schema:
          nullable: true
          type: string
        style: form
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/create_subscriber_success_response'
          description: Subscriber successfully created
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Invalid request.
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Invalid credentials.
      summary: Create Subscriber
      tags:
      - Subscribers
      x-accepts: application/json; charset=utf-8
      x-tags:
      - tag: Subscribers
  /api/v1/subscribers/{subscriber_id}:
    get:
      description: |
        Retrieve a subscriber record.
      operationId: GetSubscriber
      parameters:
      - description: The subscriber's id.
        explode: false
        in: path
        name: subscriber_id
        required: true
        schema:
          nullable: false
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/get_subscriber_response'
          description: Subscriber successfully retrieved.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Bad request.
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Invalid credentials.
      summary: Get Subscriber
      tags:
      - Subscribers
      x-accepts: application/json; charset=utf-8
      x-tags:
      - tag: Subscribers
  /api/v1/organization:
    get:
      description: |
        Gets an organization given the organization's code.
      operationId: getOrganization
      parameters:
      - description: The organization's code.
        explode: true
        in: query
        name: code
        required: false
        schema:
          nullable: false
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/organization'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/organization'
          description: Organization successfully retrieved.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Bad request.
        "403":
          description: Invalid credentials.
      summary: Get Organization
      tags:
      - Organizations
      x-accepts: application/json
      x-tags:
      - tag: Organizations
    post:
      description: Create an organization.
      operationId: createOrganization
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createOrganization_request'
        description: Organization details.
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/create_organization_response'
          description: Organization successfully created.
        "403":
          description: Invalid credentials.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Error creating user.
        "500":
          description: Could not create organization.
      summary: Create Organization
      tags:
      - Organizations
      x-content-type: application/json
      x-accepts: application/json
      x-tags:
      - tag: Organizations
  /api/v1/organization/{org_code}:
    delete:
      description: Delete an organization.
      operationId: deleteOrganization
      parameters:
      - description: The identifier for the organization.
        explode: false
        in: path
        name: org_code
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Organization successfully deleted.
        "403":
          description: Invalid credentials.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Error deleting organization.
      summary: Delete Organization
      tags:
      - Organizations
      x-accepts: application/json
      x-tags:
      - tag: Organizations
    patch:
      description: Update an organization.
      operationId: updateOrganization
      parameters:
      - description: The identifier for the organization.
        explode: false
        in: path
        name: org_code
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateOrganization_request'
        description: Organization details.
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success_response'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/success_response'
          description: Organization successfully updated.
        "403":
          description: Invalid credentials.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Error updating organization.
      summary: Update Organization
      tags:
      - Organizations
      x-content-type: application/json
      x-accepts: application/json
      x-tags:
      - tag: Organizations
  /api/v1/organizations:
    get:
      description: |
        Get a list of organizations.
      operationId: getOrganizations
      parameters:
      - description: Field and order to sort the result by.
        explode: true
        in: query
        name: sort
        required: false
        schema:
          enum:
          - name_asc
          - name_desc
          - email_asc
          - email_desc
          nullable: true
          type: string
        style: form
      - description: Number of results per page. Defaults to 10 if parameter not sent.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          nullable: true
          type: integer
        style: form
      - description: A string to get the next page of results if there are more results.
        explode: true
        in: query
        name: next_token
        required: false
        schema:
          nullable: true
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_organizations_response'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/get_organizations_response'
          description: A successful response with a list of organizations or an empty
            list.
        "403":
          description: Invalid credentials.
      summary: List Organizations
      tags:
      - Organizations
      x-accepts: application/json
      x-tags:
      - tag: Organizations
  /api/v1/organizations/{org_code}/users:
    get:
      description: Get users in an organization.
      operationId: GetOrganizationUsers
      parameters:
      - description: Field and order to sort the result by.
        explode: true
        in: query
        name: sort
        required: false
        schema:
          enum:
          - name_asc
          - name_desc
          - email_asc
          - email_desc
          nullable: true
          type: string
        style: form
      - description: Number of results per page. Defaults to 10 if parameter not sent.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          nullable: true
          type: integer
        style: form
      - description: A string to get the next page of results if there are more results.
        explode: true
        in: query
        name: next_token
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The organization's code.
        explode: false
        in: path
        name: org_code
        required: true
        schema:
          nullable: false
          type: string
        style: simple
      - description: Filter by user permissions
        explode: true
        in: query
        name: permissions
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_organization_users_response'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/get_organization_users_response'
          description: A successful response with a list of organization users or
            an empty list.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Error creating user
        "403":
          description: Invalid credentials.
      summary: List Organization Users
      tags:
      - Organizations
      x-accepts: application/json
      x-tags:
      - tag: Organizations
    patch:
      description: Update users that belong to an organization.
      operationId: UpdateOrganizationUsers
      parameters:
      - description: The organization's code.
        explode: false
        in: path
        name: org_code
        required: true
        schema:
          nullable: false
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateOrganizationUsers_request'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/update_organization_users_response'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/update_organization_users_response'
          description: Users successfully removed.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Error updating organization user.
        "403":
          description: Invalid credentials.
      summary: Update Organization Users
      tags:
      - Organizations
      x-content-type: application/json
      x-accepts: application/json
      x-tags:
      - tag: Organizations
    post:
      description: Add existing users to an organization.
      operationId: AddOrganizationUsers
      parameters:
      - description: The organization's code.
        explode: false
        in: path
        name: org_code
        required: true
        schema:
          nullable: false
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddOrganizationUsers_request'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/add_organization_users_response'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/add_organization_users_response'
          description: Users successfully added.
        "204":
          description: No users added.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Bad request.
        "403":
          description: Invalid credentials.
      summary: Add Organization Users
      tags:
      - Organizations
      x-content-type: application/json
      x-accepts: application/json
      x-tags:
      - tag: Organizations
  /api/v1/organizations/{org_code}/users/{user_id}/roles:
    get:
      description: Get roles for an organization user.
      operationId: GetOrganizationUserRoles
      parameters:
      - description: The organization's code.
        explode: false
        in: path
        name: org_code
        required: true
        schema:
          nullable: false
          type: string
        style: simple
      - description: The user's id.
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          nullable: false
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_organizations_user_roles_response'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/get_organizations_user_roles_response'
          description: A successful response with a list of user roles.
        "403":
          description: Invalid credentials.
      summary: List Organization User Roles
      tags:
      - Organizations
      x-accepts: application/json
      x-tags:
      - tag: Organizations
    post:
      description: Add role to an organization user.
      operationId: CreateOrganizationUserRole
      parameters:
      - description: The organization's code.
        explode: false
        in: path
        name: org_code
        required: true
        schema:
          nullable: false
          type: string
        style: simple
      - description: The user's id.
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          nullable: false
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrganizationUserRole_request'
        description: Role details.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success_response'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/success_response'
          description: User successfully removed from
        "403":
          description: Invalid credentials.
      summary: Add Organization User Role
      tags:
      - Organizations
      x-content-type: application/json
      x-accepts: application/json
      x-tags:
      - tag: Organizations
  /api/v1/organizations/{org_code}/users/{user_id}/roles/{role_id}:
    delete:
      description: Delete role for an organization user.
      operationId: DeleteOrganizationUserRole
      parameters:
      - description: The organization's code.
        explode: false
        in: path
        name: org_code
        required: true
        schema:
          nullable: false
          type: string
        style: simple
      - description: The user's id.
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          nullable: false
          type: string
        style: simple
      - description: The role id.
        explode: false
        in: path
        name: role_id
        required: true
        schema:
          nullable: false
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success_response'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/success_response'
          description: User successfully removed.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Error creating user.
        "403":
          description: Invalid credentials.
      summary: Delete Organization User Role
      tags:
      - Organizations
      x-accepts: application/json
      x-tags:
      - tag: Organizations
  /api/v1/organizations/{org_code}/users/{user_id}:
    delete:
      description: Remove user from an organization.
      operationId: RemoveOrganizationUser
      parameters:
      - description: The organization's code.
        explode: false
        in: path
        name: org_code
        required: true
        schema:
          nullable: false
          type: string
        style: simple
      - description: The user's id.
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          nullable: false
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success_response'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/success_response'
          description: User successfully removed from organization
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Error removing user
        "403":
          description: Invalid credentials.
      summary: Remove Organization User
      tags:
      - Organizations
      x-accepts: application/json
      x-tags:
      - tag: Organizations
  /api/v1/connected_apps/auth_url:
    get:
      description: Get a URL that authenticates and authorizes a user to a third-party
        connected app.
      operationId: GetConnectedAppAuthUrl
      parameters:
      - description: The unique key code reference of the connected app to authenticate
          against.
        explode: true
        in: query
        name: key_code_ref
        required: true
        schema:
          nullable: false
          type: string
        style: form
      - description: The id of the user that needs to authenticate to the third-party
          connected app.
        explode: true
        in: query
        name: user_id
        required: true
        schema:
          nullable: false
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connected_apps_auth_url'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/connected_apps_auth_url'
          description: A URL that can be used to authenticate and a session id to
            identify this authentication session.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Error retrieving connected app auth url.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Error retrieving connected app auth url.
        "403":
          description: Invalid credentials.
      summary: Get Connected App URL
      tags:
      - Connected Apps
      x-accepts: application/json
      x-tags:
      - tag: Connected Apps
  /api/v1/connected_apps/token:
    get:
      description: Get an access token that can be used to call the third-party provider
        linked to the connected app.
      operationId: GetConnectedAppToken
      parameters:
      - description: The unique sesssion id reprensenting the login session of a user.
        explode: true
        in: query
        name: session_id
        required: true
        schema:
          nullable: false
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connected_apps_access_token'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/connected_apps_access_token'
          description: "An access token that can be used to query a third-party provider,\
            \ as well as the token's expiry time."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/error_response'
          description: The session id provided points to an invalid session.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Invalid credentials.
      summary: Get Connected App Token
      tags:
      - Connected Apps
      x-accepts: application/json
      x-tags:
      - tag: Connected Apps
  /api/v1/connected_apps/revoke:
    post:
      description: Revoke the tokens linked to the connected app session.
      operationId: RevokeConnectedAppToken
      parameters:
      - description: The unique sesssion id reprensenting the login session of a user.
        explode: true
        in: query
        name: session_id
        required: true
        schema:
          nullable: false
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success_response'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/success_response'
          description: "An access token that can be used to query a third-party provider,\
            \ as well as the token's expiry time."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Bad request.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Invalid credentials.
        "405":
          description: Invalid HTTP method used.
      summary: Revoke Connected App Token
      tags:
      - Connected Apps
      x-accepts: application/json
      x-tags:
      - tag: Connected Apps
  /api/v1/feature_flags:
    post:
      description: Create feature flag.
      operationId: CreateFeatureFlag
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateFeatureFlag_request'
        description: Flag details.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success_response'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/success_response'
          description: Feature flag successfully created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Invalid request.
        "403":
          description: Invalid credentials.
      summary: Create Feature Flag
      tags:
      - Feature Flags
      x-content-type: application/json
      x-accepts: application/json
      x-tags:
      - tag: Feature Flags
  /api/v1/feature_flags/{feature_flag_key}:
    delete:
      description: Delete feature flag
      operationId: DeleteFeatureFlag
      parameters:
      - description: The identifier for the feature flag.
        explode: false
        in: path
        name: feature_flag_key
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success_response'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/success_response'
          description: Feature flag successfully updated.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Invalid request.
        "403":
          description: Invalid credentials.
      summary: Delete Feature Flag
      tags:
      - Feature Flags
      x-accepts: application/json
      x-tags:
      - tag: Feature Flags
    put:
      description: Update feature flag.
      operationId: UpdateFeatureFlag
      parameters:
      - description: The key identifier for the feature flag.
        explode: false
        in: path
        name: feature_flag_key
        required: true
        schema:
          type: string
        style: simple
      - description: The name of the flag.
        explode: true
        in: query
        name: name
        required: true
        schema:
          nullable: false
          type: string
        style: form
      - description: Description of the flag purpose.
        explode: true
        in: query
        name: description
        required: true
        schema:
          nullable: false
          type: string
        style: form
      - description: The variable type
        explode: true
        in: query
        name: type
        required: true
        schema:
          enum:
          - str
          - int
          - bool
          nullable: false
          type: string
        style: form
      - description: Allow the flag to be overridden at a different level.
        explode: true
        in: query
        name: allow_override_level
        required: true
        schema:
          enum:
          - env
          - org
          nullable: false
          type: string
        style: form
      - description: Default value for the flag used by environments and organizations.
        explode: true
        in: query
        name: default_value
        required: true
        schema:
          nullable: false
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success_response'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/success_response'
          description: Feature flag successfully updated.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Invalid request.
        "403":
          description: Invalid credentials.
      summary: Replace Feature Flag
      tags:
      - Feature Flags
      x-accepts: application/json
      x-tags:
      - tag: Feature Flags
  /api/v1/organizations/{org_code}/feature_flags:
    delete:
      description: Delete all organization feature flag overrides.
      operationId: DeleteOrganizationFeatureFlagOverrides
      parameters:
      - description: The identifier for the organization.
        explode: false
        in: path
        name: org_code
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success_response'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/success_response'
          description: Feature flag overrides successfully deleted.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Invalid request.
        "403":
          description: Invalid credentials.
      summary: Delete Organization Feature Flag Overrides
      tags:
      - Organizations
      x-accepts: application/json
      x-tags:
      - tag: Organizations
    get:
      description: Get all organization feature flags.
      operationId: GetOrganizationFeatureFlags
      parameters:
      - description: The identifier for the organization.
        explode: false
        in: path
        name: org_code
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_organization_feature_flags_response'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/get_organization_feature_flags_response'
          description: Feature flag overrides successfully returned.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Invalid request.
        "403":
          description: Invalid credentials.
      summary: List Organization Feature Flags
      tags:
      - Organizations
      x-accepts: application/json
      x-tags:
      - tag: Organizations
  /api/v1/organizations/{org_code}/feature_flags/{feature_flag_key}:
    delete:
      description: Delete organization feature flag override.
      operationId: DeleteOrganizationFeatureFlagOverride
      parameters:
      - description: The identifier for the organization.
        explode: false
        in: path
        name: org_code
        required: true
        schema:
          type: string
        style: simple
      - description: The identifier for the feature flag.
        explode: false
        in: path
        name: feature_flag_key
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success_response'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/success_response'
          description: Feature flag override successfully deleted.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Invalid request.
        "403":
          description: Invalid credentials.
      summary: Delete Organization Feature Flag Override
      tags:
      - Organizations
      x-accepts: application/json
      x-tags:
      - tag: Organizations
    patch:
      description: Update organization feature flag override.
      operationId: UpdateOrganizationFeatureFlagOverride
      parameters:
      - description: The identifier for the organization
        explode: false
        in: path
        name: org_code
        required: true
        schema:
          type: string
        style: simple
      - description: The identifier for the feature flag
        explode: false
        in: path
        name: feature_flag_key
        required: true
        schema:
          type: string
        style: simple
      - description: Override value
        explode: true
        in: query
        name: value
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success_response'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/success_response'
          description: Feature flag override successfully updated.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Invalid request.
        "403":
          description: Invalid credentials.
      summary: Update Organization Feature Flag Override
      tags:
      - Organizations
      x-accepts: application/json
      x-tags:
      - tag: Organizations
  /api/v1/environment/feature_flags:
    delete:
      description: Delete all environment feature flag overrides.
      operationId: DeleteEnvironementFeatureFlagOverrides
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success_response'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/success_response'
          description: Feature flag overrides deleted successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Invalid request.
        "403":
          description: Invalid credentials.
      summary: Delete Environment Feature Flag Overrides
      tags:
      - Environments
      x-accepts: application/json
      x-tags:
      - tag: Environments
    get:
      description: Get environment feature flags.
      operationId: GetEnvironementFeatureFlags
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_environment_feature_flags_response'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/get_environment_feature_flags_response'
          description: Feature flags retrieved successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Invalid request.
        "403":
          description: Invalid credentials.
      summary: List Environment Feature Flags
      tags:
      - Environments
      x-accepts: application/json
      x-tags:
      - tag: Environments
  /api/v1/environment/feature_flags/{feature_flag_key}:
    delete:
      description: Delete environment feature flag override.
      operationId: DeleteEnvironementFeatureFlagOverride
      parameters:
      - description: The identifier for the feature flag.
        explode: false
        in: path
        name: feature_flag_key
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success_response'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/success_response'
          description: Feature flag deleted successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Invalid request.
        "403":
          description: Invalid credentials.
      summary: Delete Environment Feature Flag Override
      tags:
      - Environments
      x-accepts: application/json
      x-tags:
      - tag: Environments
    patch:
      description: Update environment feature flag override.
      operationId: UpdateEnvironementFeatureFlagOverride
      parameters:
      - description: The identifier for the feature flag.
        explode: false
        in: path
        name: feature_flag_key
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateEnvironementFeatureFlagOverride_request'
        description: Flag details.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success_response'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/success_response'
          description: Feature flag override successful
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Invalid request.
        "403":
          description: Invalid credentials.
      summary: Update Environment Feature Flag Override
      tags:
      - Environments
      x-content-type: application/json
      x-accepts: application/json
      x-tags:
      - tag: Environments
  /api/v1/permissions:
    get:
      description: |
        The returned list can be sorted by permission name or permission ID in ascending or descending order. The number of records to return at a time can also be controlled using the `page_size` query string parameter.
      operationId: GetPermissions
      parameters:
      - description: Field and order to sort the result by.
        explode: true
        in: query
        name: sort
        required: false
        schema:
          enum:
          - name_asc
          - name_desc
          - id_asc
          - id_desc
          nullable: true
          type: string
        style: form
      - description: Number of results per page. Defaults to 10 if parameter not sent.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          nullable: true
          type: integer
        style: form
      - description: A string to get the next page of results if there are more results.
        explode: true
        in: query
        name: next_token
        required: false
        schema:
          nullable: true
          type: string
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/success_response'
          description: Permissions successfully retrieved.
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Invalid credentials.
      summary: List Permissions
      tags:
      - Permissions
      x-accepts: application/json; charset=utf-8
      x-tags:
      - tag: Permissions
    post:
      description: Create a new permission.
      operationId: CreatePermission
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePermission_request'
        description: Permission details.
        required: false
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/success_response'
          description: Permission successfully created
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Invalid request.
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Invalid credentials.
      summary: Create Permission
      tags:
      - Permissions
      x-content-type: application/json
      x-accepts: application/json; charset=utf-8
      x-tags:
      - tag: Permissions
  /api/v1/permissions/{permission_id}:
    patch:
      description: Update permission
      operationId: UpdatePermissions
      parameters:
      - description: The identifier for the permission.
        explode: false
        in: path
        name: permission_id
        required: true
        schema:
          nullable: false
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePermission_request'
        description: Permission details.
        required: false
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/success_response'
          description: Permission successfully updated
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Invalid request.
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Invalid credentials.
      summary: Update Permission
      tags:
      - Permissions
      x-content-type: application/json
      x-accepts: application/json; charset=utf-8
      x-tags:
      - tag: Permissions
  /api/v1/roles:
    get:
      description: |
        The returned list can be sorted by role name or role ID in ascending or descending order. The number of records to return at a time can also be controlled using the `page_size` query string parameter.
      operationId: GetRoles
      parameters:
      - description: Field and order to sort the result by.
        explode: true
        in: query
        name: sort
        required: false
        schema:
          enum:
          - name_asc
          - name_desc
          - id_asc
          - id_desc
          nullable: true
          type: string
        style: form
      - description: Number of results per page. Defaults to 10 if parameter not sent.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          nullable: true
          type: integer
        style: form
      - description: A string to get the next page of results if there are more results.
        explode: true
        in: query
        name: next_token
        required: false
        schema:
          nullable: true
          type: string
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/get_roles_response'
          description: Roles successfully retrieved.
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Invalid credentials.
      summary: List Roles
      tags:
      - Roles
      x-accepts: application/json; charset=utf-8
      x-tags:
      - tag: Roles
  /api/v1/roles/{role_id}/permissions:
    patch:
      description: |
        Update role permissions.
      operationId: UpdateRolePermissions
      parameters:
      - description: The identifier for the role.
        explode: false
        in: path
        name: role_id
        required: true
        schema:
          nullable: false
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateRolePermissions_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/update_role_permissions_response'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/update_role_permissions_response'
          description: Permissions successfully updated.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Invalid credentials.
      summary: Update Role Permissions
      tags:
      - Roles
      x-content-type: application/json
      x-accepts: application/json
      x-tags:
      - tag: Roles
  /api/v1/role:
    post:
      description: Create role.
      operationId: CreateRole
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRole_request'
        description: Role details.
        required: false
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/success_response'
          description: Role successfully created
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Invalid request.
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Invalid credentials.
      summary: Create Role
      tags:
      - Roles
      x-content-type: application/json
      x-accepts: application/json; charset=utf-8
      x-tags:
      - tag: Roles
  /api/v1/roles/{role_id}:
    patch:
      description: Update a role
      operationId: UpdateRoles
      parameters:
      - description: The identifier for the role.
        explode: false
        in: path
        name: role_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateRoles_request'
        description: Role details.
        required: false
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/success_response'
          description: Role successfully updated
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Invalid request.
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Invalid credentials.
      summary: Update Role
      tags:
      - Roles
      x-content-type: application/json
      x-accepts: application/json; charset=utf-8
      x-tags:
      - tag: Roles
  /api/v1/business:
    get:
      description: Get your business details.
      operationId: getBusiness
      parameters:
      - description: Business code.
        explode: true
        in: query
        name: code
        required: true
        schema:
          nullable: false
          type: string
        style: form
      - description: Business name.
        explode: true
        in: query
        name: name
        required: true
        schema:
          nullable: false
          type: string
        style: form
      - description: Email associated with business.
        explode: true
        in: query
        name: email
        required: true
        schema:
          nullable: false
          type: string
        style: form
      - description: Phone number associated with business.
        explode: true
        in: query
        name: phone
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The industry your business is in.
        explode: true
        in: query
        name: industry
        required: false
        schema:
          nullable: false
          type: string
        style: form
      - description: The timezone your business is in.
        explode: true
        in: query
        name: timezone
        required: false
        schema:
          nullable: false
          type: string
        style: form
      - description: Your Privacy policy URL.
        explode: true
        in: query
        name: privacy_url
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: Your Terms and Conditions URL.
        explode: true
        in: query
        name: terms_url
        required: false
        schema:
          nullable: true
          type: string
        style: form
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/success_response'
          description: A successful response with your business details.
        "403":
          description: Invalid credentials.
      summary: List business details
      tags:
      - Business
      x-accepts: application/json; charset=utf-8
      x-tags:
      - tag: Business
    patch:
      description: Update business details.
      operationId: updateBusiness
      parameters:
      - description: Business name.
        explode: true
        in: query
        name: business_name
        required: true
        schema:
          nullable: false
          type: string
        style: form
      - description: Email associated with business.
        explode: true
        in: query
        name: primary_email
        required: true
        schema:
          nullable: false
          type: string
        style: form
      - description: Phone number associated with business.
        explode: true
        in: query
        name: primary_phone
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The key of the industry your business is in.
        explode: true
        in: query
        name: industry_key
        required: false
        schema:
          nullable: false
          type: string
        style: form
      - description: The ID of the timezone your business is in.
        explode: true
        in: query
        name: timezone_id
        required: false
        schema:
          nullable: false
          type: string
        style: form
      - description: Your Privacy policy URL.
        explode: true
        in: query
        name: privacy_url
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: Your Terms and Conditions URL.
        explode: true
        in: query
        name: terms_url
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: "Display \"Powered by Kinde\" on your sign up, sign in, and subscription\
          \ pages."
        explode: true
        in: query
        name: is_show_kinde_branding
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: Show a policy acceptance checkbox on sign up.
        explode: true
        in: query
        name: is_click_wrap
        required: false
        schema:
          nullable: true
          type: boolean
        style: form
      - description: Your Kinde Perk code.
        explode: true
        in: query
        name: partner_code
        required: false
        schema:
          nullable: true
          type: string
        style: form
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/success_response'
          description: Business successfully updated.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Invalid request.
        "403":
          description: Invalid credentials.
      summary: Update business details
      tags:
      - Business
      x-accepts: application/json; charset=utf-8
      x-tags:
      - tag: Business
  /api/v1/industries:
    get:
      description: Get a list of industries and associated industry keys.
      operationId: getIndustries
      parameters:
      - description: Industry Key.
        explode: true
        in: query
        name: industry_key
        required: false
        schema:
          type: string
        style: form
      - description: Industry name.
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/success_response'
          description: A successful response with a list of industries and industry
            keys.
        "403":
          description: Invalid credentials.
      summary: List industries and industry keys.
      tags:
      - Industries
      x-accepts: application/json; charset=utf-8
      x-tags:
      - tag: Industries
  /api/v1/timezones:
    get:
      description: Get a list of timezones and associated timezone keys.
      operationId: getTimezones
      parameters:
      - description: Timezone Key.
        explode: true
        in: query
        name: timezone_key
        required: false
        schema:
          type: string
        style: form
      - description: Timezone.
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/success_response'
          description: A successful response with a list of timezones and timezone
            keys.
        "403":
          description: Invalid credentials.
      summary: List timezones and timezone IDs.
      tags:
      - Timezones
      x-accepts: application/json; charset=utf-8
      x-tags:
      - tag: Timezones
  /api/v1/applications:
    get:
      description: |
        Get a list of applications.
      operationId: getApplications
      parameters:
      - description: Field and order to sort the result by.
        explode: true
        in: query
        name: sort
        required: false
        schema:
          enum:
          - name_asc
          - name_desc
          nullable: true
          type: string
        style: form
      - description: Number of results per page. Defaults to 10 if parameter not sent.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          nullable: true
          type: integer
        style: form
      - description: A string to get the next page of results if there are more results.
        explode: true
        in: query
        name: next_token
        required: false
        schema:
          nullable: true
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_applications_response'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/get_applications_response'
          description: A successful response with a list of applications or an empty
            list.
        "403":
          description: Invalid credentials.
      summary: List Applications
      tags:
      - Applications
      x-accepts: application/json
      x-tags:
      - tag: Applications
    post:
      description: Create an application.
      operationId: createApplication
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createApplication_request'
        description: Application details.
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/create_application_response'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/create_application_response'
          description: Application successfully created.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Error creating user.
        "403":
          description: Invalid credentials.
      summary: Create Application
      tags:
      - Applications
      x-content-type: application/json
      x-accepts: application/json
      x-tags:
      - tag: Applications
  /api/v1/applications/{application_id}:
    get:
      description: |
        Gets an application given the application's id.
      operationId: getApplication
      parameters:
      - description: The identifier for the application.
        explode: false
        in: path
        name: application_id
        required: true
        schema:
          nullable: false
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_application_response'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/get_application_response'
          description: Application successfully retrieved.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Bad request.
        "403":
          description: Invalid credentials.
      summary: Get Application
      tags:
      - Applications
      x-accepts: application/json
      x-tags:
      - tag: Applications
    patch:
      description: Update an application.
      operationId: updateApplication
      parameters:
      - description: The identifier for the application.
        explode: false
        in: path
        name: application_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateApplication_request'
        description: Application details.
        required: false
      responses:
        "200":
          description: Application successfully updated.
        "403":
          description: Invalid credentials.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Bad request.
      summary: Update Application
      tags:
      - Applications
      x-content-type: application/json
      x-accepts: application/json
      x-tags:
      - tag: Applications
  /api/v1/applications/{app_id}/auth_redirect_urls:
    delete:
      description: |
        Delete callback URLs.
      operationId: deleteCallbackURLs
      parameters:
      - description: The identifier for the application.
        explode: false
        in: path
        name: app_id
        required: true
        schema:
          type: string
        style: simple
      - description: "Urls to delete, comma separated and url encoded."
        explode: true
        in: query
        name: urls
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success_response'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/success_response'
          description: Callback URLs successfully deleted.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Invalid request.
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Invalid credentials.
      summary: Delete Callback URLs
      tags:
      - Callbacks
      x-accepts: application/json
      x-tags:
      - tag: Callbacks
    get:
      description: |
        Returns an application's redirect callback URLs.
      operationId: getCallbackURLs
      parameters:
      - description: The identifier for the application.
        explode: false
        in: path
        name: app_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/redirect_callback_urls'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/redirect_callback_urls'
          description: Callback URLs successfully retrieved.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Invalid request.
        "403":
          description: Invalid credentials.
      summary: List Callback URLs
      tags:
      - Callbacks
      x-accepts: application/json
      x-tags:
      - tag: Callbacks
    post:
      description: |
        Add additional redirect callback URLs.
      operationId: addRedirectCallbackURLs
      parameters:
      - description: The identifier for the application.
        explode: false
        in: path
        name: app_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/replaceRedirectCallbackURLs_request'
        description: Callback details.
        required: true
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/success_response'
          description: Callbacks successfully updated
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Invalid request.
        "403":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Invalid credentials.
      summary: Add Redirect Callback URLs
      tags:
      - Callbacks
      x-content-type: application/json
      x-accepts: application/json; charset=utf-8
      x-tags:
      - tag: Callbacks
    put:
      description: |
        Replace all redirect callback URLs.
      operationId: replaceRedirectCallbackURLs
      parameters:
      - description: The identifier for the application.
        explode: false
        in: path
        name: app_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/replaceRedirectCallbackURLs_request'
        description: Callback details.
        required: true
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/success_response'
          description: Callbacks successfully updated
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/error_response'
          description: Invalid request.
        "403":
          description: Invalid credentials.
      summary: Replace Redirect Callback URLs
      tags:
      - Callbacks
      x-content-type: application/json
      x-accepts: application/json; charset=utf-8
      x-tags:
      - tag: Callbacks
components:
  schemas:
    success_response:
      example:
        code: code
        message: message
      properties:
        message:
          type: string
        code:
          type: string
      type: object
    error:
      properties:
        code:
          description: Error code.
          type: string
        message:
          description: Error message.
          type: string
      type: object
    error_response:
      properties:
        errors:
          items:
            $ref: '#/components/schemas/error'
          type: array
      type: object
    user:
      example:
        failed_sign_ins: 6
        last_name: last_name
        is_suspended: true
        last_signed_in: last_signed_in
        is_password_reset_requested: true
        total_sign_ins: 0
        picture: picture
        full_name: full_name
        created_on: created_on
        id: id
        provided_id: provided_id
        first_name: first_name
        email: email
      properties:
        id:
          description: Unique id of the user in Kinde.
          type: string
        provided_id:
          description: External id for user.
          type: string
        email:
          description: Default email address of the user in Kinde.
          type: string
        last_name:
          description: User's last name.
          type: string
        first_name:
          description: User's first name.
          type: string
        full_name:
          description: User's full name.
          type: string
        is_suspended:
          description: Whether the user is currently suspended or not.
          type: boolean
        picture:
          description: User's profile picture URL.
          type: string
        is_password_reset_requested:
          description: Whether the user has been asked to reset their password.
          nullable: true
          type: boolean
        total_sign_ins:
          description: Total number of user sign ins.
          nullable: true
          type: integer
        failed_sign_ins:
          description: Number of consecutive failed user sign ins.
          nullable: true
          type: integer
        last_signed_in:
          description: Last sign in date in ISO 8601 format.
          nullable: true
          type: string
        created_on:
          description: Date of user creation in ISO 8601 format.
          nullable: true
          type: string
      type: object
    users:
      description: Array of users.
      items:
        $ref: '#/components/schemas/user'
      type: array
    users_response:
      example:
        code: code
        message: message
        next_token: next_token
        users:
        - failed_sign_ins: 6
          last_name: last_name
          is_suspended: true
          last_signed_in: last_signed_in
          is_password_reset_requested: true
          total_sign_ins: 0
          picture: picture
          full_name: full_name
          created_on: created_on
          id: id
          provided_id: provided_id
          first_name: first_name
          email: email
        - failed_sign_ins: 6
          last_name: last_name
          is_suspended: true
          last_signed_in: last_signed_in
          is_password_reset_requested: true
          total_sign_ins: 0
          picture: picture
          full_name: full_name
          created_on: created_on
          id: id
          provided_id: provided_id
          first_name: first_name
          email: email
      properties:
        code:
          description: Response code.
          type: string
        message:
          description: Response message.
          type: string
        users:
          items:
            $ref: '#/components/schemas/user'
          type: array
        next_token:
          description: Pagination token.
          type: string
      type: object
    create_user_response:
      example:
        identities:
        - result:
            created: true
          type: type
        - result:
            created: true
          type: type
        created: true
        id: id
      properties:
        id:
          description: Unique id of the user in Kinde.
          type: string
        created:
          description: True if the user was successfully created.
          type: boolean
        identities:
          items:
            $ref: '#/components/schemas/user_identity'
          type: array
      type: object
    create_organization_response:
      example:
        code: code
        organization:
          code: code
        message: message
      properties:
        message:
          type: string
        code:
          type: string
        organization:
          $ref: '#/components/schemas/create_organization_response_organization'
      type: object
    user_identity:
      example:
        result:
          created: true
        type: type
      properties:
        type:
          description: The type of identity object created.
          type: string
        result:
          $ref: '#/components/schemas/user_identity_result'
      type: object
    user_profile:
      example:
        preferred_email: preferred_email
        last_name: last_name
        id: id
        provided_id: provided_id
        first_name: first_name
        picture: picture
      properties:
        id:
          description: Unique id of the user in Kinde.
          type: string
        preferred_email:
          description: Default email address of the user in Kinde.
          type: string
        provided_id:
          description: Value of the user's id in a third-party system when the user
            is imported into Kinde.
          nullable: true
          type: string
        last_name:
          description: User's last name.
          type: string
        first_name:
          description: User's first name.
          type: string
        picture:
          description: URL that point's to the user's picture or avatar
          type: string
      type: object
    user_profile_v2:
      example:
        sub: sub
        updated_at: 0
        name: name
        id: id
        given_name: given_name
        provided_id: provided_id
        family_name: family_name
        email: email
        picture: picture
      properties:
        id:
          description: Unique id of the user in Kinde (deprecated).
          type: string
        sub:
          description: Unique id of the user in Kinde.
          type: string
        provided_id:
          description: Value of the user's id in a third-party system when the user
            is imported into Kinde.
          nullable: true
          type: string
        name:
          description: Users's first and last name separated by a space.
          type: string
        given_name:
          description: User's first name.
          type: string
        family_name:
          description: User's last name.
          type: string
        updated_at:
          description: Date the user was last updated at (In Unix time).
          type: integer
        email:
          description: User's email address if available.
          type: string
        picture:
          description: URL that point's to the user's picture or avatar
          type: string
      type: object
    organization:
      example:
        code: code
        name: name
        is_default: true
      properties:
        code:
          type: string
        name:
          type: string
        is_default:
          type: boolean
      type: object
    organizations:
      items:
        $ref: '#/components/schemas/organization'
      type: array
    organization_user:
      example:
        full_name: full_name
        roles:
        - roles
        - roles
        last_name: last_name
        id: id
        first_name: first_name
        email: email
      properties:
        id:
          type: string
        email:
          type: string
        full_name:
          type: string
        last_name:
          type: string
        first_name:
          type: string
        roles:
          items:
            type: string
          type: array
      type: object
    role:
      example:
        name: name
        description: description
        id: id
        key: key
      properties:
        id:
          type: string
        key:
          type: string
        name:
          type: string
        description:
          type: string
      type: object
    subscribers_subscriber:
      example:
        full_name: full_name
        last_name: last_name
        id: id
        first_name: first_name
        email: email
      properties:
        id:
          type: string
        email:
          type: string
        full_name:
          type: string
        first_name:
          type: string
        last_name:
          type: string
      type: object
    subscriber:
      example:
        preferred_email: preferred_email
        last_name: last_name
        id: id
        first_name: first_name
      properties:
        id:
          type: string
        preferred_email:
          type: string
        first_name:
          type: string
        last_name:
          type: string
      type: object
    organization_user_role:
      example:
        name: name
        id: id
        key: key
      properties:
        id:
          type: string
        key:
          type: string
        name:
          type: string
      type: object
    organization_users:
      items:
        $ref: '#/components/schemas/organization_user'
      type: array
    get_subscriber_response:
      example:
        code: code
        subscribers:
        - preferred_email: preferred_email
          last_name: last_name
          id: id
          first_name: first_name
        - preferred_email: preferred_email
          last_name: last_name
          id: id
          first_name: first_name
        message: message
      properties:
        code:
          description: Response code.
          type: string
        message:
          description: Response message.
          type: string
        subscribers:
          items:
            $ref: '#/components/schemas/subscriber'
          type: array
      type: object
    get_subscribers_response:
      example:
        code: code
        subscribers:
        - full_name: full_name
          last_name: last_name
          id: id
          first_name: first_name
          email: email
        - full_name: full_name
          last_name: last_name
          id: id
          first_name: first_name
          email: email
        message: message
        next_token: next_token
      properties:
        code:
          description: Response code.
          type: string
        message:
          description: Response message.
          type: string
        subscribers:
          items:
            $ref: '#/components/schemas/subscribers_subscriber'
          type: array
        next_token:
          description: Pagination token.
          type: string
      type: object
    get_roles_response:
      example:
        code: code
        roles:
        - name: name
          description: description
          key: key
        - name: name
          description: description
          key: key
        message: message
        next_token: next_token
      properties:
        code:
          description: Response code.
          type: string
        message:
          description: Response message.
          type: string
        roles:
          items:
            $ref: '#/components/schemas/roles'
          type: array
        next_token:
          description: Pagination token.
          type: string
      type: object
    get_organizations_response:
      example:
        code: code
        roles:
        - name: name
          description: description
          id: id
          key: key
        - name: name
          description: description
          id: id
          key: key
        message: message
        next_token: next_token
      properties:
        code:
          description: Response code.
          type: string
        message:
          description: Response message.
          type: string
        roles:
          items:
            $ref: '#/components/schemas/role'
          type: array
        next_token:
          description: Pagination token.
          type: string
      type: object
    get_organization_users_response:
      example:
        code: code
        organization_users:
        - full_name: full_name
          roles:
          - roles
          - roles
          last_name: last_name
          id: id
          first_name: first_name
          email: email
        - full_name: full_name
          roles:
          - roles
          - roles
          last_name: last_name
          id: id
          first_name: first_name
          email: email
        message: message
        next_token: next_token
      properties:
        code:
          description: Response code.
          type: string
        message:
          description: Response message.
          type: string
        organization_users:
          items:
            $ref: '#/components/schemas/organization_user'
          type: array
        next_token:
          description: Pagination token.
          type: string
      type: object
    get_organizations_user_roles_response:
      example:
        code: code
        roles:
        - name: name
          id: id
          key: key
        - name: name
          id: id
          key: key
        message: message
        next_token: next_token
      properties:
        code:
          description: Response code.
          type: string
        message:
          description: Response message.
          type: string
        roles:
          items:
            $ref: '#/components/schemas/organization_user_role'
          type: array
        next_token:
          description: Pagination token.
          type: string
      type: object
    get_organization_feature_flags_response:
      example:
        code: code
        feature_flags:
          key:
            type: str
            value: value
        message: message
      properties:
        code:
          description: Response code.
          type: string
        message:
          description: Response message.
          type: string
        feature_flags:
          additionalProperties:
            $ref: '#/components/schemas/get_organization_feature_flags_response_feature_flags_value'
          description: The environment's feature flag settings.
          type: object
      type: object
    get_environment_feature_flags_response:
      example:
        code: code
        feature_flags:
          key:
            type: str
            value: value
        message: message
        next_token: next_token
      properties:
        code:
          description: Response code.
          type: string
        message:
          description: Response message.
          type: string
        feature_flags:
          additionalProperties:
            $ref: '#/components/schemas/get_organization_feature_flags_response_feature_flags_value'
          description: The environment's feature flag settings.
          type: object
        next_token:
          description: Pagination token.
          type: string
      type: object
    add_organization_users_response:
      example:
        users_added:
        - users_added
        - users_added
        code: code
        message: message
      properties:
        code:
          description: Response code.
          type: string
        message:
          description: Response message.
          type: string
        users_added:
          items:
            type: string
          type: array
      type: object
    update_role_permissions_response:
      example:
        permissions_added:
        - permissions_added
        - permissions_added
        code: code
        message: message
        permissions_removed:
        - permissions_removed
        - permissions_removed
      properties:
        code:
          type: string
        message:
          type: string
        permissions_added:
          items:
            type: string
          type: array
        permissions_removed:
          items:
            type: string
          type: array
      type: object
    update_organization_users_response:
      example:
        users_added:
        - users_added
        - users_added
        users_updated:
        - users_updated
        - users_updated
        users_removed:
        - users_removed
        - users_removed
        message: message
      properties:
        message:
          type: string
        users_added:
          items:
            type: string
          type: array
        users_updated:
          items:
            type: string
          type: array
        users_removed:
          items:
            type: string
          type: array
      type: object
    connected_apps_auth_url:
      example:
        session_id: session_id
        url: url
      properties:
        url:
          description: A URL that is used to authenticate an end-user against a connected
            app.
          type: string
        session_id:
          description: A unique identifier for the login session.
          type: string
      type: object
    create_subscriber_success_response:
      example:
        subscriber:
          subscriber_id: subscriber_id
      properties:
        subscriber:
          $ref: '#/components/schemas/create_subscriber_success_response_subscriber'
      type: object
    connected_apps_access_token:
      example:
        access_token: access_token
        access_token_expiry: access_token_expiry
      properties:
        access_token:
          description: The access token to access a third-party provider.
          type: string
        access_token_expiry:
          description: The date and time that the access token expires.
          type: string
      type: object
    api_result:
      properties:
        result:
          description: The result of the api operation.
          type: string
      type: object
    create_application_response:
      example:
        code: code
        application:
          id: id
          client_secret: client_secret
          client_id: client_id
        message: message
      properties:
        code:
          description: Response code.
          type: string
        message:
          description: Response message.
          type: string
        application:
          $ref: '#/components/schemas/create_application_response_application'
      type: object
    get_application_response:
      example:
        code: code
        application:
          name: name
          id: id
          client_secret: client_secret
          type: type
          client_id: client_id
        message: message
      properties:
        code:
          description: Response code.
          type: string
        message:
          description: Response message.
          type: string
        application:
          $ref: '#/components/schemas/get_application_response_application'
      type: object
    applications:
      example:
        name: name
        id: id
        type: type
      properties:
        id:
          type: string
        name:
          type: string
        type:
          type: string
      type: object
    get_applications_response:
      example:
        code: code
        message: message
        next_token: next_token
        applications:
        - name: name
          id: id
          type: type
        - name: name
          id: id
          type: type
      properties:
        code:
          description: Response code.
          type: string
        message:
          description: Response message.
          type: string
        applications:
          items:
            $ref: '#/components/schemas/applications'
          type: array
        next_token:
          description: Pagination token.
          type: string
      type: object
    redirect_callback_urls:
      example:
        redirect_urls:
        - redirect_urls
        - redirect_urls
      properties:
        redirect_urls:
          description: An application's redirect URLs.
          items:
            type: string
          type: array
      type: object
    get_redirect_callback_urls_response:
      properties:
        redirect_urls:
          description: An application's redirect callback URLs.
          items:
            $ref: '#/components/schemas/redirect_callback_urls'
          type: array
      type: object
    permissions:
      properties:
        id:
          description: The permission identifier to use in code.
          type: string
        name:
          description: The permission's name.
          type: string
        description:
          description: The permission's description.
          type: string
      type: object
    roles:
      example:
        name: name
        description: description
        key: key
      properties:
        key:
          description: The role identifier to use in code.
          type: string
        name:
          description: The role's name.
          type: string
        description:
          description: The role's description.
          type: string
      type: object
    createUser_request_profile:
      description: Basic information required to create a user.
      properties:
        given_name:
          description: User's first name.
          type: string
        family_name:
          description: User's last name.
          type: string
      type: object
    createUser_request_identities_inner_details:
      description: Additional details required to create the user.
      properties:
        email:
          description: The email address of the user.
          type: string
      type: object
    createUser_request_identities_inner:
      description: The result of the user creation operation.
      properties:
        type:
          description: "The type of identity to create, for e.g. email."
          enum:
          - email
          type: string
        details:
          $ref: '#/components/schemas/createUser_request_identities_inner_details'
      type: object
    createUser_request:
      properties:
        profile:
          $ref: '#/components/schemas/createUser_request_profile'
        identities:
          description: Array of identities to assign to the created user
          items:
            $ref: '#/components/schemas/createUser_request_identities_inner'
          type: array
      type: object
    updateUser_request:
      properties:
        given_name:
          description: User's first name.
          type: string
        family_name:
          description: User's last name.
          type: string
        is_suspended:
          description: Whether the user is currently suspended or not.
          type: boolean
        is_password_reset_requested:
          description: Prompt the user to change their password on next sign in.
          type: boolean
      type: object
    createOrganization_request:
      properties:
        name:
          description: The organization's name.
          type: string
        feature_flags:
          additionalProperties:
            description: Value of the feature flag.
            enum:
            - str
            - int
            - bool
            type: string
          description: The organization's feature flag settings.
          type: object
        external_id:
          description: The organization's ID.
          type: string
        background_color:
          description: The organization's brand settings - background color.
          type: string
        button_color:
          description: The organization's brand settings - button color.
          type: string
        button_text_color:
          description: The organization's brand settings - button text color.
          type: string
        link_color:
          description: The organization's brand settings - link color.
          type: string
      type: object
    updateOrganization_request:
      properties:
        name:
          description: The organization's name.
          type: string
        external_id:
          description: The organization's ID.
          type: string
        background_color:
          description: The organization's brand settings - background color.
          type: string
        button_color:
          description: The organization's brand settings - button color.
          type: string
        button_text_color:
          description: The organization's brand settings - button text color.
          type: string
        link_color:
          description: The organization's brand settings - link color.
          type: string
      type: object
    AddOrganizationUsers_request_users_inner:
      properties:
        id:
          description: The users id.
          type: string
        roles:
          description: Role keys to assign to the user.
          items:
            type: string
          type: array
        permissions:
          description: Permission keys to assign to the user.
          items:
            type: string
          type: array
      type: object
    AddOrganizationUsers_request:
      properties:
        users:
          description: Users to be added to the organization.
          items:
            $ref: '#/components/schemas/AddOrganizationUsers_request_users_inner'
          type: array
      type: object
    UpdateOrganizationUsers_request_users_inner:
      properties:
        id:
          description: The users id.
          type: string
        operation:
          description: "Optional operation, set to 'delete' to remove the user from\
            \ the organization."
          type: string
        roles:
          description: Role keys to assign to the user.
          items:
            type: string
          type: array
        permissions:
          description: Permission keys to assign to the user.
          items:
            type: string
          type: array
      type: object
    UpdateOrganizationUsers_request:
      properties:
        users:
          description: "Users to add, update or remove from the organization."
          items:
            $ref: '#/components/schemas/UpdateOrganizationUsers_request_users_inner'
          type: array
      type: object
    CreateOrganizationUserRole_request:
      properties:
        role_id:
          description: The role id.
          type: string
      type: object
    CreateFeatureFlag_request:
      properties:
        name:
          description: The name of the flag.
          nullable: false
          type: string
        description:
          description: Description of the flag purpose.
          nullable: false
          type: string
        key:
          description: The flag identifier to use in code.
          nullable: false
          type: string
        type:
          description: The variable type.
          enum:
          - str
          - int
          - bool
          nullable: false
          type: string
        allow_override_level:
          description: Allow the flag to be overridden at a different level.
          enum:
          - env
          - org
          nullable: false
          type: string
        default_value:
          description: Default value for the flag used by environments and organizations.
          nullable: false
          type: string
      required:
      - default_value
      - key
      - name
      - type
      type: object
    UpdateEnvironementFeatureFlagOverride_request:
      properties:
        value:
          description: The flag override value.
          nullable: false
          type: string
      required:
      - value
      type: object
    CreatePermission_request:
      properties:
        name:
          description: The permission's name.
          type: string
        description:
          description: The permission's description.
          type: string
        key:
          description: The permission identifier to use in code.
          type: string
      type: object
    UpdateRolePermissions_request_permissions_inner:
      properties:
        id:
          description: The permission id.
          type: string
        operation:
          description: "Optional operation, set to 'delete' to remove the permission\
            \ from the role."
          type: string
      type: object
    UpdateRolePermissions_request:
      properties:
        permissions:
          description: Permissions to add or remove from the role.
          items:
            $ref: '#/components/schemas/UpdateRolePermissions_request_permissions_inner'
          type: array
      type: object
    CreateRole_request:
      properties:
        name:
          description: The role's name.
          type: string
        description:
          description: The role's description.
          type: string
        key:
          description: The role identifier to use in code.
          type: string
        is_default_role:
          description: Set role as default for new users.
          type: boolean
      type: object
    UpdateRoles_request:
      properties:
        name:
          description: The role's name.
          type: string
        description:
          description: The role's description.
          type: string
        key:
          description: The role identifier to use in code.
          type: string
        is_default_role:
          description: Set role as default for new users.
          type: boolean
      required:
      - key
      - name
      type: object
    createApplication_request:
      properties:
        name:
          description: The application's name.
          type: string
        type:
          description: The application's type.
          type: string
      type: object
    updateApplication_request:
      properties:
        name:
          description: The application's name.
          type: string
        language_key:
          description: The application's language key.
          type: string
        logout_uris:
          description: The application's logout uris.
          items:
            type: string
          type: array
        redirect_uris:
          description: The application's redirect uris.
          items:
            type: string
          type: array
      type: object
    replaceRedirectCallbackURLs_request:
      properties:
        urls:
          description: Array of callback urls.
          items:
            type: string
          type: array
      type: object
    create_organization_response_organization:
      example:
        code: code
      properties:
        code:
          description: The organization's code.
          type: string
      type: object
    user_identity_result:
      description: The result of the user creation operation.
      example:
        created: true
      properties:
        created:
          description: True if the user identity was successfully created.
          type: boolean
      type: object
    get_organization_feature_flags_response_feature_flags_value:
      example:
        type: str
        value: value
      properties:
        type:
          enum:
          - str
          - int
          - bool
          type: string
        value:
          type: string
      type: object
    create_subscriber_success_response_subscriber:
      example:
        subscriber_id: subscriber_id
      properties:
        subscriber_id:
          description: A unique identifier for the subscriber.
          type: string
      type: object
    create_application_response_application:
      example:
        id: id
        client_secret: client_secret
        client_id: client_id
      properties:
        id:
          description: The application's identifier.
          type: string
        client_id:
          description: The application's client id.
          type: string
        client_secret:
          description: The application's client secret.
          type: string
      type: object
    get_application_response_application:
      example:
        name: name
        id: id
        client_secret: client_secret
        type: type
        client_id: client_id
      properties:
        id:
          description: The application's identifier.
          type: string
        name:
          description: The application's name.
          type: string
        type:
          description: The application's type.
          type: string
        client_id:
          description: The application's client id.
          type: string
        client_secret:
          description: The application's client secret.
          type: string
      type: object
  securitySchemes:
    kindeBearerAuth:
      bearerFormat: JWT
      description: |
        Accessing the API requires obtaining an access token when login in through Kinde. However, management functions (for e.g. user management) requires an access token
        obtained using the client_credentials flow.
      scheme: bearer
      type: http
